// 递归实现，需要背！

class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        m = board.size();
        if (m == 0) return word.empty();
        n = board[0].size();

        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                if (isFound(board, word.c_str(), i, j))
                    return true;
            }
        }
        return false;
    }
private:
    int m;
    int n;
    bool isFound(vector<vector<char>>& board, const char *w, int r, int c) {
        if (r >= m || c >= n || r < 0 || c < 0 || board[r][c] == '\0' || board[r][c] != *w)
            return false;
        if (*(w+1) == '\0')
            return true;
        char t = board[r][c];
        board[r][c] = '\0';
        if (isFound(board, w+1, r-1, c) || isFound(board, w+1, r, c-1) || isFound(board, w+1, r+1, c) || isFound(board, w+1, r, c+1)) {
            return true;
        }
        // 无匹配, 还原
        board[r][c] = t;
        return false;
    }
};