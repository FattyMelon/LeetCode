// 背！

class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map <string, multiset<string>> temp;
        vector<vector<string>> result;

        for (string str : strs) {
            string tStr = str;
            sort(str.begin(), str.end());
            temp[str].insert(tStr);
        }
        for (auto m : temp) {
            vector<string> tempSet(m.second.begin(), m.second.end());
            result.push_back(tempSet);
        }
        return result;
    }
};


// 自己写的
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        vector<vector<string>> result;
        unordered_map<string, vector<string>>   map1;
        int len = strs.size();
        for (int i = 0; i < len; ++i) {
            string tempStr = strs[i];
            sort(tempStr.begin(), tempStr.end());
            map1[tempStr].push_back(strs[i]);
        }

        for (auto temp : map1) {
            vector<string> vec(temp.second.begin(),temp.second.end());
            sort(vec.begin(), vec.end());
            result.push_back(vec);
        }
        return result;
    }
};