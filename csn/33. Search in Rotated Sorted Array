// 暴力解法可以通过，但是此方法为变形的2分法，O(logn)

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int left = 0, right = nums.size() - 1;

        while(left <= right) {
            int mid = (left + right) / 2;

            if (target == nums[mid])
                return mid;

            // 说明左边是正确且有序的
            if (nums[left] <= nums[mid]) {
                if (target < nums[mid] && target >= nums[left])
                    right = mid - 1;
                else
                    left = mid + 1;
            } else {    // 说明右边有序
                if (target > nums[mid] && target <= nums[right])
                    left = mid + 1;
                else
                    right = mid - 1;
            }
        }

        return -1;
    }
};