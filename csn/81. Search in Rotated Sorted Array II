// 平均情况下是O(lgn),最差情况下O(n)

class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int left = 0, right = nums.size() - 1;

        while(left <= right) {
            int mid = (left + right) / 2;

            if (target == nums[mid])
                return true;

            // 当nums[left] == nums[mid] == nums[right]
            // 无法判断，所以将left+1, right-1
            if ((nums[left] == nums[mid]) && (nums[right] == nums[mid])) {++left; --right;}
            // 说明左边是正确且有序的
            else if (nums[left] <= nums[mid]) {
                if (target < nums[mid] && target >= nums[left])
                    right = mid - 1;
                else
                    left = mid + 1;
            } else {    // 说明右边有序
                if (target > nums[mid] && target <= nums[right])
                    left = mid + 1;
                else
                    right = mid - 1;
            } 
        }
        return false;
    }
};