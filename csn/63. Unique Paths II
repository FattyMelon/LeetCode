class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int f[101][101] = {0};
        int m = obstacleGrid.size();
        if (m <= 0) return 0;
        int n = obstacleGrid[0].size();
        if (n <= 0) return 0;
        
        // 初始化
        if (obstacleGrid[0][0] == 1 || obstacleGrid[m-1][n-1] == 1)
            return 0;
        else {
            for (int i = 0; i < m; ++i) {
                for (int j = 0; j < n; ++j) {
                    if (i == 0 && j == 0) f[i][j] = 1;    // 初始化为1
                    else {
                        if (obstacleGrid[i][j] == 1) {
                            f[i][j] = 0;
                            continue;
                        }
                        if (j > 0) f[i][j] += f[i][j-1];
                        if (i > 0) f[i][j] += f[i-1][j];
                    }
                }
            }
        }
        return f[m-1][n-1];
    }
};