// 时间复杂度O(n), unordered_map就是hash，find函数的时间复杂度为O(1)
// 注意map的搜索效率是O(logn),unordered_map是O(1)
// map是用红黑树实现的，unordered_map是用hash实现的

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map <int, int> map1;
        vector <int> result;

        for (int i = 0; i < nums.size(); ++i) {
            map1[nums[i]] = i;
        }
        
        //find(key)
        for (int i = 0; i < nums.size(); ++i) {
            int temp = target - nums[i];
            if (map1.find(temp) != map1.end() && map1[temp] > i) {
                result.push_back(i);
                result.push_back(map1[temp]);
                break;
            }
        }
        return result;
    }
};